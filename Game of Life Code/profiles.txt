Initial program performance (runtime, bottlenecks, scaling with n):
The slowest run took 4.59 times longer than the fastest. This could mean that an intermediate result is being cached.
1 loop, best of 3: 750 ms per loop

1 loop, best of 3: 734 ms per loop

n_steps = 10 
10 loops, best of 3: 110 ms per loop





Fix 1:
New program performance:
The slowest run took 5.45 times longer than the fastest. This could mean that an intermediate result is being cached.
1 loop, best of 3: 540 ms per loop
1 loop, best of 3: 349 ms per loop



etc.